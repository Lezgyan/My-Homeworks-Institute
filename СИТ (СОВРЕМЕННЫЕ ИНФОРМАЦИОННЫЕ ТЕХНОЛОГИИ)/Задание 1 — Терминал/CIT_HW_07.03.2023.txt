1) grep --include=\*.cpp -rl . -e "#include <vector>"
grep - функция поиска, --include=\*.cpp - хотим рассматривать файлы с любым названем (\*) с расширением cpp, -r - искать рекурсивно 
везде, l - не печатать слово, которое мы ищем, . - откуда начинаем(из текущей папки), -e - флаг что ищем, "" - что именно ищем

2) find . -name "how_far_are_you.txt" -printf '%d\n'
find - поиск, . - из текущей директории, -name - поиск такого имени файла,
-printf '%d\n' - вывод пути к нему

3) zip -Rj ans '*.cpp'
zip - закопавка в архив, -R - по всем папкам, j - без иерархии

4) find . -name '*.cpp' -o -name '*.h' | xargs wc -l
find - поиск, -name '*.cpp' - расширение которое ищем, xargs - передать предыдущие агрументы, которые нашли, в следующую команду,
wc - подсчёт в файле, -l - считать именно строки

5) fzf --height 40% | xargs nano
nano - открывать в nano, fzf - создаёт варианты выбора

6) grep -c "include" $1
grep - функция поиска, -с - посчитать кол-во "include", $1 - первый параметр в строке, он будет подставлять их автоматически

7) find . ! -name "*.cpp" | xargs rm -d 2> /dev/null
find - поиск всего, кроме сpp, а потом передача всего, что нашли дальше, rm - удаление, -d - удалять пустые папки тоже
2> /dev/null - блокировка ошибок

8) (echo "Hello.cpp" | entr g++ Hello.cpp -o outputbinary &)

echo - передать файл дяльше, entr - елси изменился файл, то она делает что написано дальше, g++ - компиляция
-o - имя выходного файла, outputbinary - название результирующего файла, & - чтобы запустить в фоне